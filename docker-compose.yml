services:

  producer:
    container_name: producer
    build: .
    image: producer
    volumes:
      - type: bind
        source: ./producer.py
        target: /app/producer.py
      - type: bind
        source: ./reddit_ds.csv
        target: /app/reddit_ds.csv
    command: [ "./producer.py"]
    networks:
      - kafka-stack-docker-compose_default

  consumer:
    container_name: consumer
    build: .
    image: consumer
    volumes:
      - type: bind
        source: ./consumer.py
        target: /app/consumer.py
    command: [ "./consumer.py" ]
    networks:
      - kafka-stack-docker-compose_default

  reporter:
    container_name: reporter
    build: .
    image: reporter
    volumes:
      - type: bind
        source: ./reporter.py
        target: /app/reporter.py
    command: [ "./reporter.py" ]
    depends_on:
      consumer:
        condition: service_completed_successfully
    networks:
      - kafka-stack-docker-compose_default

networks:
  kafka-stack-docker-compose_default:
    external: true

